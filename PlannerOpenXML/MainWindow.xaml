<Window x:Class="PlannerOpenXML.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:vm="clr-namespace:PlannerOpenXML.ViewModel"
        xmlns:conv="clr-namespace:PlannerOpenXML.Converters"
        d:DataContext="{d:DesignInstance Type={x:Type vm:MainViewModel}}"
        mc:Ignorable="d"
        Icon="/Resources/icon.png"
        Title="Planner Generator" Height="550" Width="350">
    <Window.Resources>
        <conv:BooleanToVisibilityConverter x:Key="BoolToVis"/>
        <Style x:Key="CustomCheckBoxStyle" TargetType="CheckBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <StackPanel Orientation="Horizontal">
                            <Border x:Name="border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="#007ACC"
                                    BorderThickness="2"
                                    CornerRadius="2"
                                    Width="16"
                                    Height="16"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center">
                                <Path x:Name="checkMark"
                                      Data="M 0 4 L 2 6 L 6 2"
                                      Stroke="Black"
                                      StrokeThickness="2"
                                      Visibility="Collapsed"
                                      VerticalAlignment="Center"
                                      HorizontalAlignment="Center"/>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter"
                                              Margin="5,0,0,0"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Left">
                                <ContentPresenter.Content>
                                    <TextBlock Text="{TemplateBinding Content}"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Left"/>
                                </ContentPresenter.Content>
                            </ContentPresenter>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#007ACC" />
                                <Setter TargetName="checkMark" Property="Visibility" Value="Visible" />
                                <Setter TargetName="contentPresenter" Property="TextBlock.Foreground" Value="#007ACC" />
                                <Setter TargetName="contentPresenter" Property="TextBlock.FontWeight" Value="Bold" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Background" Value="#A0A0A0" />
                                <Setter TargetName="border" Property="BorderBrush" Value="Gray" />
                                <Setter TargetName="contentPresenter" Property="TextBlock.Foreground" Value="#FF505050" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CustomButtonStyle" TargetType="Button">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Border x:Name="border" Background="#007ACC" CornerRadius="5"/>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#D6D6D6"/>
                                <Setter Property="Foreground" Value="#007ACC"/>
                                <Setter Property="FontWeight" Value="Bold"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid Background="#FFB4B4B4" Margin="0,0,-9,-5">
        <Image Source="/Resources/logo.png" Margin="62,16,60,0" VerticalAlignment="Top" Height="66"/>
        <TextBlock
            HorizontalAlignment="Center"
            Height="35"
            Margin="0,100,0,0"
            TextWrapping="Wrap"
            VerticalAlignment="Top"
            Width="260"
            FontSize="22"
            FontWeight="Bold"
            TextAlignment="Center"
            Text="Planner Generator"
            Foreground="#FF333333"/>
        <xctk:WatermarkTextBox
            x:Name="YearTextBox"
            Watermark="Enter year"
            Text="{Binding Year, Mode=TwoWay}"
            HorizontalAlignment="Center"
            Height="25" Margin="0,160,0,0"
            TextWrapping="Wrap"
            VerticalAlignment="Top"
            Width="180"
            VerticalContentAlignment="Center"
            Padding="3, 0, 0, 0">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="PreviewKeyDown">
                    <i:InvokeCommandAction Command="{Binding CheckNumericInputCommand}" CommandParameter="{Binding ElementName=YearTextBox}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </xctk:WatermarkTextBox>
        <Label x:Name="MonthsLabel"
               Content="Select first month"
               Foreground="Gray"
               HorizontalAlignment="Center"
               VerticalAlignment="Top"
               Margin="0,200,0,0"
               Height="25"
               Width="180"
               Background="White"
               Visibility="{Binding MonthsLabelVisibility, Converter={StaticResource BoolToVis}}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseLeftButtonDown">
                    <i:InvokeCommandAction Command="{Binding LabelClickedCommand}" CommandParameter="MonthsLabel"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </Label>
        <ComboBox
            x:Name="MonthsComboBox"
            SelectedItem="{Binding FirstMonth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            ItemsSource="{Binding Months}"
            HorizontalAlignment="Center"
            Height="25"
            VerticalAlignment="Top"
            Width="180"
            Margin="0,200,0,0"
            VerticalContentAlignment="Center"
            Padding="7, 0, 0, 0" 
            Visibility="{Binding MonthsComboBoxVisibility, Converter={StaticResource BoolToVis}}"
            IsDropDownOpen="{Binding IsMonthsComboBoxOpen}"/>
        <xctk:WatermarkTextBox
            x:Name="NumberOfMonthsTextBox"
            Watermark="Enter number of months"
            Text="{Binding NumberOfMonths, Mode=TwoWay}"
            HorizontalAlignment="Center"
            Height="25" Margin="0,240,0,0"
            TextWrapping="Wrap"
            VerticalAlignment="Top"
            Width="180"
            VerticalContentAlignment="Center"
            Padding="3, 0, 0, 0">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="PreviewKeyDown">
                    <i:InvokeCommandAction Command="{Binding CheckNumericInputCommand}" CommandParameter="{Binding ElementName=NumberOfMonthsTextBox}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </xctk:WatermarkTextBox>
        <TextBlock
            Text="Choose a holiday country"
            HorizontalAlignment="Center" 
            Height="25"
            VerticalAlignment="Top" 
            Width="180"
            Margin="0,280,0,0"
            Padding="7, 0, 0, 0"
            />
        <ListBox 
            ItemsSource="{Binding CountryList.Countries}"
            SelectionMode="Extended"
            HorizontalAlignment="Center" 
            Height="85" 
            Margin="0,300,0,0" 
            VerticalAlignment="Top" 
            Width="180" 
            Background="{x:Null}" 
            BorderBrush="{x:Null}">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <CheckBox 
                        Style="{StaticResource CustomCheckBoxStyle}"
                        Content="{Binding Name}" 
                        IsChecked="{Binding IsChecked, Mode=TwoWay}" 
                        IsEnabled="{Binding IsEnabled}"
                        Command="{Binding DataContext.CheckCountryCommand, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" 
                        CommandParameter="{Binding}"/>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <Button
            Content="Generate"
            Command="{Binding GenerateCommand}"
            HorizontalAlignment="Center"
            Height="40"
            Margin="0,420,0,0"
            VerticalAlignment="Top"
            Width="114"
            Style="{StaticResource CustomButtonStyle}"/>
    </Grid>
</Window>
