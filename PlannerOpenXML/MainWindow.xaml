<Window x:Class="PlannerOpenXML.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:vm="clr-namespace:PlannerOpenXML.ViewModel"
        xmlns:conv="clr-namespace:PlannerOpenXML.Converters"
        xmlns:uc="clr-namespace:PlannerOpenXML.UserControls"
        d:DataContext="{d:DesignInstance Type={x:Type vm:MainViewModel}}"
        mc:Ignorable="d"
        Icon="/Resources/icon.png"
        Title="Planner Generator" SizeToContent="Height" Width="650" Background="#FFB4B4B4">
    <Window.Resources>
        <conv:MonthLabelVisibilityConverter x:Key="monthLabelVisConv"/>
        <conv:MilestoneLabelVisibilityConverter x:Key="milestoneLabelVisConv"/>
        <conv:DateOnlyToDateTimeConverter x:Key="DateOnlyToDateTime" />
        <conv:NullToVisibilityConverter x:Key="NotNullToVisibility" WhenTrue="Collapsed" WhenFalse="Visible" />
        <Style x:Key="CustomCheckBoxStyle" TargetType="CheckBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <StackPanel Orientation="Horizontal">
                            <Border x:Name="border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="#007ACC"
                                    BorderThickness="2"
                                    CornerRadius="2"
                                    Width="16"
                                    Height="16"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center">
                                <Path x:Name="checkMark"
                                      Data="M 0 4 L 2 6 L 6 2"
                                      Stroke="Black"
                                      StrokeThickness="2"
                                      Visibility="Collapsed"
                                      VerticalAlignment="Center"
                                      HorizontalAlignment="Center"/>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter"
                                              Margin="5,0,0,0"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Left">
                                <ContentPresenter.Content>
                                    <TextBlock Text="{TemplateBinding Content}"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Left"/>
                                </ContentPresenter.Content>
                            </ContentPresenter>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#007ACC" />
                                <Setter TargetName="checkMark" Property="Visibility" Value="Visible" />
                                <Setter TargetName="contentPresenter" Property="TextBlock.Foreground" Value="#007ACC" />
                                <Setter TargetName="contentPresenter" Property="TextBlock.FontWeight" Value="Bold" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Background" Value="#A0A0A0" />
                                <Setter TargetName="border" Property="BorderBrush" Value="Gray" />
                                <Setter TargetName="contentPresenter" Property="TextBlock.Foreground" Value="#FF505050" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CustomButtonStyle" TargetType="Button">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Height" Value="25" />
            <Setter Property="VerticalAlignment" Value="Bottom"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Border x:Name="border" Background="#007ACC" CornerRadius="5"/>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#D6D6D6"/>
                                <Setter Property="Foreground" Value="#007ACC"/>
                                <Setter Property="FontWeight" Value="Bold"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid Margin="0,30" VerticalAlignment="Center" HorizontalAlignment="Center">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Image Grid.Row="0" Source="/Resources/logo.png" VerticalAlignment="Top" Width="200" Margin="0,0,0,20"/>
        <TextBlock
            Grid.Row="1"
            HorizontalAlignment="Center"
            Margin="0,0,0,30"
            TextWrapping="Wrap"
            VerticalAlignment="Top"
            Width="260"
            FontSize="22"
            FontWeight="Bold"
            TextAlignment="Center"
            Text="Planner Generator"
            Foreground="#FF333333"/>
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <xctk:WatermarkTextBox
                Grid.Column="0"
                x:Name="YearTextBox"
                Watermark="Enter year"
                Text="{Binding Year, Mode=TwoWay}"
                HorizontalAlignment="Center"
                TextWrapping="Wrap"
                VerticalAlignment="Top"
                Width="180"
                Height="30"
                VerticalContentAlignment="Center"
                Margin="0,0,10,0"
                Padding="3, 5, 0, 5">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewKeyDown">
                        <i:InvokeCommandAction Command="{Binding CheckNumericInputCommand}" CommandParameter="{Binding ElementName=YearTextBox}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </xctk:WatermarkTextBox>
            <Label x:Name="MonthsLabel"
                   Grid.Column="1"
                   Content="Select first month"
                   Foreground="Gray"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Top"
                   Padding="4, 7, 0, 0"
                   Margin="0,0,10,0"
                   Width="180"
                   Height="30"
                   Background="White"
                   Visibility="{Binding MonthsLabelVisibility, Converter={StaticResource monthLabelVisConv}}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseLeftButtonDown">
                        <i:InvokeCommandAction Command="{Binding MonthLabelClickedCommand}" CommandParameter="MonthsLabel"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Label>
            <ComboBox
                x:Name="MonthsComboBox"
                Grid.Column="1"
                SelectedItem="{Binding FirstMonth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                ItemsSource="{Binding Months}"
                HorizontalAlignment="Center"
                VerticalAlignment="Top"
                Width="180"
                Height="30"
                VerticalContentAlignment="Center"
                Margin="0,0,10,0"
                Padding="7, 5, 0, 5" 
                Visibility="{Binding MonthsComboBoxVisibility, Converter={StaticResource monthLabelVisConv}}"
                IsDropDownOpen="{Binding IsMonthsComboBoxOpen}"/>
            <xctk:WatermarkTextBox
                x:Name="NumberOfMonthsTextBox"
                Grid.Column="2"
                Watermark="Enter number of months"
                Text="{Binding NumberOfMonths, Mode=TwoWay}"
                HorizontalAlignment="Center"
                TextWrapping="Wrap"
                VerticalAlignment="Top"
                Width="180"
                Height="30"
                Margin="0,0,0,20"
                VerticalContentAlignment="Center"
                Padding="3, 5, 0, 5">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewKeyDown">
                        <i:InvokeCommandAction Command="{Binding CheckNumericInputCommand}" CommandParameter="{Binding ElementName=NumberOfMonthsTextBox}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </xctk:WatermarkTextBox>
        </Grid>
        <Grid Grid.Row="3">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Expander 
                x:Name="Expander" 
                Header="Extra settings" 
                Grid.Row="0"
                FontWeight="Bold"
                Foreground="#007ACC"
                HorizontalAlignment="Center" 
                VerticalAlignment="Top" 
                Padding="0,0,0,10" 
                Width="560">
                <StackPanel>
                    <Grid Width="Auto">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Column="0" HorizontalAlignment="Left" Margin="30,0,0,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock
                                Text="Select a holiday country:"
                                VerticalAlignment="Center" 
                                Padding="10, 0, 0, 5"
                                Foreground="Black"
                                FontWeight="Medium"/>
                            <ListBox 
                                Grid.Row="1"
                                ItemsSource="{Binding CountryList.Countries}"
                                SelectionMode="Extended"
                                FontWeight="Normal"
                                HorizontalAlignment="Left" 
                                VerticalAlignment="Top"
                                Padding="10,0,0,0"
                                Background="{x:Null}" 
                                BorderBrush="{x:Null}">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <CheckBox 
                                            Style="{StaticResource CustomCheckBoxStyle}"
                                            Content="{Binding Name}" 
                                            IsChecked="{Binding IsChecked, Mode=TwoWay}" 
                                            IsEnabled="{Binding IsEnabled}"
                                            Command="{Binding DataContext.CheckCountryCommand, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" 
                                            CommandParameter="{Binding}"/>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </Grid>
                        <Grid Grid.Column="1" HorizontalAlignment="Center">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <TextBlock
                                    Text="Milestones:"
                                    Grid.Row="0"
                                    HorizontalAlignment="Left" 
                                    Padding="0, 0, 0, 5"
                                    Foreground="Black"
                                    FontWeight="Medium"/>
                                <uc:EditableListBox
                                    Grid.Row="1"
                                    Items="{Binding Milestones.View}"
                                    Selected="{Binding Milestones.Selected}"
                                    ItemsDisplayMemberPath="Description"
                                    Add="{Binding Milestones.AddCommand}"
                                    Clone="{Binding Milestones.CloneCommand}"
                                    Remove="{Binding Milestones.RemoveCommand}"
                                    Foreground="Gray"
                                    Height="90"
                                    Width="180"
                                    Margin="0,0,0,10"
                                    Background="White"
                                    />
                                <DatePicker
                                    Grid.Row="2"
                                    HorizontalAlignment="Center" 
                                    Text="Enter date"
                                    Margin="0,0,0,10"
                                    FontWeight="Normal" 
                                    Width="180" 
                                    Background="White"
                                    Visibility="{Binding Milestones.Selected, Converter={StaticResource NotNullToVisibility}}"
                                    SelectedDate="{Binding Milestones.Selected.Date, Converter={StaticResource DateOnlyToDateTime}, UpdateSourceTrigger=PropertyChanged}"/>
                                <TextBox 
                                    Grid.Row="3"
                                    Text="{Binding Milestones.Selected.Description}"
                                    Margin="0,0,0,10"
                                    Visibility="{Binding Milestones.Selected, Converter={StaticResource NotNullToVisibility}}" />
                                <Grid Grid.Row="4">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Button
                                        Grid.Column="0"
                                        Content="Load"
                                        Width="55"
                                        FontSize="12"
                                        HorizontalAlignment="Left"
                                        Style="{StaticResource CustomButtonStyle}"
                                        Command="{Binding MilestonesLoadCommand}"/>
                                    <Button
                                        Grid.Column="1"
                                        Content="Save"
                                        Width="55"
                                        FontSize="12"
                                        HorizontalAlignment="Center"
                                        Style="{StaticResource CustomButtonStyle}"
                                        IsEnabled="{Binding Milestones.CanSave}"
                                        Command="{Binding MilestonesSaveCommand}"/>
                                    <Button
                                        Grid.Column="2"
                                        Content="Save as..."
                                        Width="55"
                                        FontSize="12"
                                        HorizontalAlignment="Right"
                                        Style="{StaticResource CustomButtonStyle}"
                                        IsEnabled="{Binding Milestones.Changed}"
                                        Command="{Binding MilestonesSaveAsCommand}"/>
                                </Grid>
                            </Grid>
                        </Grid>
                    </Grid>
                </StackPanel>
            </Expander>
            <Button
                Content="Generate"
                Grid.Row="1"
                Command="{Binding GenerateCommand}"
                Width="114"
                Height="40"
                Margin="0,20,0,0"
                Style="{StaticResource CustomButtonStyle}"/>
        </Grid>
    </Grid>
</Window>
