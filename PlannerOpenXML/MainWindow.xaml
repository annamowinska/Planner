<Window x:Class="PlannerOpenXML.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:vm="clr-namespace:PlannerOpenXML.ViewModel"
        xmlns:conv="clr-namespace:PlannerOpenXML.Converters"
        xmlns:uc="clr-namespace:PlannerOpenXML.UserControls"
        d:DataContext="{d:DesignInstance Type={x:Type vm:MainViewModel}}"
        mc:Ignorable="d"
        Icon="/Resources/icon.png"
        Focusable="True"
        WindowStartupLocation="CenterScreen"
        Title="Planner Generator" SizeToContent="Height" Width="670" Background="#FFB4B4B4" Height="619">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadCountriesCommand}" PassEventArgsToCommand="False" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.Resources>
        <conv:DateOnlyToDateTimeConverter x:Key="DateOnlyToDateTime" />
        <conv:NullToVisibilityConverter x:Key="NotNullToVisibility" WhenTrue="Collapsed" WhenFalse="Visible" />
        <Style x:Key="CustomButtonStyle" TargetType="Button">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Height" Value="25" />
            <Setter Property="VerticalAlignment" Value="Bottom" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Border x:Name="border" Background="#007ACC" CornerRadius="5"/>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#D6D6D6"/>
                                <Setter Property="Foreground" Value="#007ACC"/>
                                <Setter Property="FontWeight" Value="Bold"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Background" Value="#E0E0E0"/>
                                <Setter Property="Foreground" Value="#BDBDBD"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <DockPanel>
        <Grid Margin="0,30" VerticalAlignment="Center" HorizontalAlignment="Center" DockPanel.Dock="Top">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Image Grid.Row="0" Source="/Resources/logo.png" VerticalAlignment="Top" Width="200" Margin="0,0,0,20"/>
            <TextBlock
                Grid.Row="1"
                HorizontalAlignment="Center"
                Margin="0,0,0,30"
                TextWrapping="Wrap"
                VerticalAlignment="Top"
                Width="260"
                FontSize="22"
                FontWeight="Bold"
                TextAlignment="Center"
                Text="Planner Generator"
                Foreground="#FF333333"/>
            <Grid Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock
                    Grid.Column="0"
                    Grid.Row="0"
                    Text="Year:" 
                    FontWeight="Medium"
                    Width="180" HorizontalAlignment="Center" VerticalAlignment="Top"/>
                <xctk:WatermarkTextBox
                    Grid.Column="0"
                    Grid.Row="1"
                    x:Name="YearTextBox"
                    Text="{Binding Year, Mode=TwoWay}"
                    HorizontalAlignment="Center"
                    TextWrapping="Wrap"
                    VerticalAlignment="Top"
                    Width="180"
                    Height="30"
                    VerticalContentAlignment="Center"
                    Margin="0,5,10,0"
                    Padding="3, 5, 0, 5">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="PreviewKeyDown">
                            <i:InvokeCommandAction Command="{Binding CheckNumericInputCommand}" CommandParameter="{Binding ElementName=YearTextBox}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </xctk:WatermarkTextBox>
                <TextBlock
                 Grid.Column="1"
                 Grid.Row="0"
                 Text="First month:" 
                 FontWeight="Medium"
                 Width="180" HorizontalAlignment="Center" VerticalAlignment="Top"/>
                <ComboBox
                x:Name="MonthsComboBox"
                Grid.Column="1"
                Grid.Row="1"
                SelectedItem="{Binding FirstMonth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                ItemsSource="{Binding Months}"
                HorizontalAlignment="Center"
                VerticalAlignment="Top"
                Width="180"
                Height="30"
                VerticalContentAlignment="Center"
                Margin="0,5,10,0"
                Padding="7, 5, 0, 5" Background="White" >
                </ComboBox>
                <TextBlock
                Grid.Column="2"
                Grid.Row="0"
                Text="Number of months:" 
                FontWeight="Medium"
                Width="174" HorizontalAlignment="Center" VerticalAlignment="Top"/>
                <xctk:WatermarkTextBox
                x:Name="NumberOfMonthsTextBox"
                Grid.Column="2"
                Grid.Row="1"
                Text="{Binding NumberOfMonths, Mode=TwoWay}"
                HorizontalAlignment="Center"
                TextWrapping="Wrap"
                VerticalAlignment="Top"
                Width="180"
                Height="30"
                Margin="0,5,0,20"
                VerticalContentAlignment="Center"
                Padding="3, 5, 0, 5">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="PreviewKeyDown">
                            <i:InvokeCommandAction Command="{Binding CheckNumericInputCommand}" CommandParameter="{Binding ElementName=NumberOfMonthsTextBox}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </xctk:WatermarkTextBox>
            </Grid>
            <Grid Grid.Row="3" Margin="0,0,0,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" MinHeight="207.92"/>
                    <RowDefinition Height="Auto" MinHeight="60"/>
                </Grid.RowDefinitions>
                <Grid Width="Auto" Margin="0,0,0,60" Grid.RowSpan="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="0" HorizontalAlignment="Left" Margin="30,0,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <TextBlock
                    Grid.Row="0"
                    Text="Holiday countries:"
                    VerticalAlignment="Center" 
                    Padding="0, 0, 0, 5"
                    Foreground="Black"
                    FontWeight="Medium"/>
                        <ComboBox 
                    x:Name="FirstCountryHoliday"
                    Grid.Row="1"
                    ItemsSource="{Binding CountryList.Countries}"
                    DisplayMemberPath="Name"
                    SelectedValuePath="Code"
                    SelectedValue="{Binding FirstCountryCode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    HorizontalAlignment="Left" 
                    VerticalAlignment="Center"
                    FontWeight="Normal"
                    VerticalContentAlignment="Center"
                    Padding="5 0 0 0"
                    Height="25"
                    Width="180" 
                    IsEditable="True">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectionChanged">
                                    <i:InvokeCommandAction Command="{Binding CheckIfCountriesAreSameCommand}" CommandParameter="{Binding ElementName=FirstCountryHoliday}"/>
                                </i:EventTrigger>
                                <i:EventTrigger EventName="LostFocus">
                                    <i:InvokeCommandAction Command="{Binding ValidateCountryCommand}" CommandParameter="{Binding ElementName=FirstCountryHoliday}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </ComboBox>
                        <ComboBox 
                        x:Name="SecondCountryHoliday"
                        Grid.Row="2"
                        ItemsSource="{Binding CountryList.Countries}"
                        DisplayMemberPath="Name"
                        SelectedValuePath="Code"
                        SelectedValue="{Binding SecondCountryCode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        HorizontalAlignment="Left" 
                        VerticalAlignment="Center"
                        FontWeight="Normal"
                        VerticalContentAlignment="Center"
                        Padding="5 0 0 0"
                        Margin="0 10 0 0"
                        Height="25"
                        Width="180"
                        IsEditable="True">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectionChanged">
                                    <i:InvokeCommandAction Command="{Binding CheckIfCountriesAreSameCommand}" CommandParameter="{Binding ElementName=SecondCountryHoliday}"/>
                                </i:EventTrigger>
                                <i:EventTrigger EventName="LostFocus">
                                    <i:InvokeCommandAction Command="{Binding ValidateCountryCommand}" CommandParameter="{Binding ElementName=SecondCountryHoliday}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </ComboBox>
                    </Grid>
                    <Grid Grid.Column="1" HorizontalAlignment="Center">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock
                            Text="Milestones:"
                            Grid.Row="0"
                            HorizontalAlignment="Left" 
                            Padding="0, 0, 0, 5"
                            Foreground="Black"
                            FontWeight="Medium"/>
                            <uc:EditableListBox
                            Grid.Row="1"
                            Items="{Binding Milestones.View}"
                            Selected="{Binding Milestones.Selected}"
                            ItemsDisplayMemberPath="Description"
                            Add="{Binding Milestones.AddCommand}"
                            Clone="{Binding Milestones.CloneCommand}"
                            Remove="{Binding Milestones.RemoveCommand}"
                            Foreground="Gray"
                            Height="90"
                            Width="180"
                            Margin="0,0,0,10"
                            Background="White"/>
                            <DatePicker
                            Grid.Row="2"
                            HorizontalAlignment="Center" 
                            Text="Enter date"
                            Margin="0,0,0,10"
                            FontWeight="Normal" 
                            Width="180" 
                            Background="White"
                            Visibility="{Binding Milestones.Selected, Converter={StaticResource NotNullToVisibility}}"
                            SelectedDate="{Binding Milestones.Selected.Date, Converter={StaticResource DateOnlyToDateTime}, UpdateSourceTrigger=PropertyChanged}"/>
                            <TextBox 
                            Grid.Row="3"
                            Text="{Binding Milestones.Selected.Description}"
                            Margin="0,0,0,10"
                            Visibility="{Binding Milestones.Selected, Converter={StaticResource NotNullToVisibility}}" />
                            <Grid Grid.Row="4">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Button
                                Grid.Column="0"
                                Content="Load"
                                Width="55"
                                FontSize="12"
                                HorizontalAlignment="Left"
                                Style="{StaticResource CustomButtonStyle}"
                                Command="{Binding MilestonesLoadCommand}"/>
                                <Button
                                Grid.Column="1"
                                Content="Save"
                                Width="55"
                                FontSize="12"
                                HorizontalAlignment="Center"
                                Style="{StaticResource CustomButtonStyle}"
                                IsEnabled="{Binding Milestones.CanSave}"
                                Command="{Binding MilestonesSaveCommand}"/>
                                <Button
                                Grid.Column="2"
                                Content="Save as..."
                                Width="55"
                                FontSize="12"
                                HorizontalAlignment="Right"
                                Style="{StaticResource CustomButtonStyle}"
                                IsEnabled="{Binding Milestones.Changed}"
                                Command="{Binding MilestonesSaveAsCommand}"/>
                            </Grid>
                        </Grid>
                    </Grid>
                </Grid>
                <Grid
                Grid.Row="4">
                    <Button
                    Content="Generate"
                    Grid.Row="1"
                    Command="{Binding GenerateCommand}"
                    Height="40"
                    Margin="223,15,223,0"
                    Style="{StaticResource CustomButtonStyle}" VerticalAlignment="Top"/>
                </Grid>
            </Grid>
        </Grid>
        <StatusBar DockPanel.Dock="Bottom" Background="#FFB4B4B4">
            <StatusBarItem>
                <Label Content="{Binding Status}" />
            </StatusBarItem>
        </StatusBar>
    </DockPanel>
</Window>