<Window x:Class="PlannerOpenXML.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:vm="clr-namespace:PlannerOpenXML.ViewModel"
        xmlns:conv="clr-namespace:PlannerOpenXML.Converters"
        d:DataContext="{d:DesignInstance Type={x:Type vm:MainViewModel}}"
        mc:Ignorable="d"
        Icon="/Resources/icon.png"
        Title="Planner Generator" Height="500" Width="350">
    <Window.Resources>
        <conv:BooleanToVisibilityConverter x:Key="BoolToVis" />
        <Style x:Key="CustomButtonStyle" TargetType="Button">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Border x:Name="border" Background="#007ACC" CornerRadius="5"/>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#D6D6D6"/>
                                <Setter Property="Foreground" Value="#007ACC"/>
                                <Setter Property="FontWeight" Value="Bold"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid Background="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" Margin="0,0,0,-2">
        <Image Source="/Resources/logo.png" Margin="62,16,60,0" VerticalAlignment="Top" Height="66"/>
        <TextBlock
            HorizontalAlignment="Center"
            Height="34"
            Margin="0,98,0,0"
            TextWrapping="Wrap"
            VerticalAlignment="Top"
            Width="260"
            FontSize="22"
            FontWeight="Bold"
            TextAlignment="Center"
            Text="Planner Generator"
            Foreground="#FF333333"/>
        <xctk:WatermarkTextBox
            x:Name="YearTextBox"
            Watermark="Enter year"
            Text="{Binding Year, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
            HorizontalAlignment="Center"
            Height="26" Margin="0,160,0,0"
            TextWrapping="Wrap"
            VerticalAlignment="Top"
            Width="180"
            VerticalContentAlignment="Center"
            Padding="3, 0, 0, 0">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="TextChanged">
                    <i:InvokeCommandAction Command="{Binding CheckNumericInputCommand}" CommandParameter="{Binding Text, ElementName=YearTextBox}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </xctk:WatermarkTextBox>
        <Label x:Name="MonthsLabel"
               Content="Select first month"
               Foreground="Gray"
               HorizontalAlignment="Center"
               VerticalAlignment="Top"
               Margin="0,200,0,0"
               Width="180"
               Background="White"
               Visibility="{Binding MonthsLabelVisibility, Converter={StaticResource BoolToVis}}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseLeftButtonDown">
                    <i:InvokeCommandAction Command="{Binding LabelClickedCommand}" CommandParameter="MonthsLabel"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </Label>
        <ComboBox
            x:Name="MonthsComboBox"
            SelectedItem="{Binding FirstMonth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            ItemsSource="{Binding Months}"
            HorizontalAlignment="Center"
            Height="26"
            VerticalAlignment="Top"
            Width="180"
            Margin="0,200,0,0"
            VerticalContentAlignment="Center"
            Padding="7, 0, 0, 0" 
            Visibility="{Binding MonthsComboBoxVisibility, Converter={StaticResource BoolToVis}}"/>
        <xctk:WatermarkTextBox
            Watermark="Enter number of months"
            x:Name="NumberOfMonths"
            Text="{Binding NumberOfMonths, Mode=TwoWay}"
            HorizontalAlignment="Center"
            Height="28" Margin="0,240,0,0"
            TextWrapping="Wrap"
            VerticalAlignment="Top"
            Width="180"
            VerticalContentAlignment="Center"
            Padding="3, 0, 0, 0">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="TextChanged">
                    <i:InvokeCommandAction Command="{Binding CheckNumericInputCommand}" CommandParameter="{Binding Text, ElementName=NumberOfMonths}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </xctk:WatermarkTextBox>
        <Label x:Name="FirstCountryHolidaysLabel"
               Content="Select first country holidays"
               Foreground="Gray"
               HorizontalAlignment="Center"
               VerticalAlignment="Top"
               Margin="0,280,0,0"
               Width="180"
               Background="White"
               Visibility="{Binding FirstCountryHolidaysLabelVisibility, Converter={StaticResource BoolToVis}}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseLeftButtonDown">
                    <i:InvokeCommandAction Command="{Binding LabelClickedCommand}" CommandParameter="FirstCountryHolidaysLabel"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </Label>
        <ComboBox
            x:Name="FirstCountryHolidaysCombobox"
            SelectedItem="{Binding FirstCountryHolidays, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            ItemsSource="{Binding Countries}"
            HorizontalAlignment="Center"
            Height="26"
            VerticalAlignment="Top"
            Width="180"
            Margin="0,280,0,0"
            VerticalContentAlignment="Center"
            Padding="7, 0, 0, 0"
            Visibility="{Binding FirstCountryHolidaysComboBoxVisibility, Converter={StaticResource BoolToVis}}"/>
        <Label x:Name="SecondCountryHolidaysLabel"
               Content="Select second country holidays"
               Foreground="Gray"
               HorizontalAlignment="Center"
               VerticalAlignment="Top"
               Margin="0,320,0,0"
               Width="180"
               Background="White"
               Visibility="{Binding SecondCountryHolidaysLabelVisibility, Converter={StaticResource BoolToVis}}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseLeftButtonDown">
                    <i:InvokeCommandAction Command="{Binding LabelClickedCommand}" CommandParameter="SecondCountryHolidaysLabel"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </Label>
        <ComboBox
            x:Name="SecondCountryHolidaysCombobox"
            SelectedItem="{Binding SecondCountryHolidays, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            ItemsSource="{Binding Countries}"
            HorizontalAlignment="Center"
            Height="26"
            VerticalAlignment="Top"
            Width="180"
            Margin="0,320,0,0"
            VerticalContentAlignment="Center"
            Padding="7, 0, 0, 0"
            Visibility="{Binding SecondCountryHolidaysComboBoxVisibility, Converter={StaticResource BoolToVis}}"/>
        <Button
            Content="Generate"
            Command="{Binding GenerateCommand}"
            HorizontalAlignment="Center"
            Height="40"
            Margin="0,380,0,0"
            VerticalAlignment="Top"
            Width="114"
            Style="{StaticResource CustomButtonStyle}"/>
    </Grid>
</Window>
